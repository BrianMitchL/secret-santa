{"version":3,"sources":["common/ValidationError.tsx","people/PersonForm.tsx","people/People.tsx","matches/Pairs.tsx","matches/match-pairs.ts","matches/Matches.tsx","common/utils.ts","exclusions/Exclusions.tsx","exclusions/ExclusionForm.tsx","common/Section.tsx","Main.tsx","App.tsx","index.tsx"],"names":["ValidationError","children","className","PersonForm","usedNames","usedGroups","onSubmit","useForm","errors","handleSubmit","register","reset","data","name","group","undefined","htmlFor","id","type","ref","required","validate","value","includes","as","list","autoComplete","map","key","People","people","removePerson","groups","reduce","acc","person","find","item","push","p","onClick","Pairs","pairs","showGroups","length","colSpan","a","b","matchPairs","exclusions","GiftExchange","calculateSync","timeout","i","giftExchangeUmdPath","window","location","origin","Matches","React","setPairs","error","setError","setShowGroups","useWorker","autoTerminate","remoteDependencies","workerFn","workerStatus","status","terminateWorker","kill","Error","calculateMatches","then","matches","catch","e","message","startsWith","disabled","onChange","prevState","checked","exclusionKey","exclusion","subject","excludedType","excludedSubject","ExclusionItem","removeHandler","Exclusions","removeExclusion","names","filter","ExclusionForm","usedExclusionKeys","watch","defaultChecked","Section","heading","isString","str","Main","setPeople","setExclusions","Set","prev","concat","prevPeople","prevExclusions","emoji","santa","Math","floor","random","App","document","title","role","aria-hidden","href","rel","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a50055eb.chunk.js","sourcesContent":["import * as React from 'react';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nexport function ValidationError({ children }: Props) {\n  return <span className=\"validation\">{children}</span>;\n}\n","import * as React from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport '../common/form.css';\nimport { Person } from 'gift-exchange';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { ValidationError } from '../common/ValidationError';\n\ntype FormValues = {\n  name: string;\n  group: string;\n};\n\ninterface Props {\n  usedNames: string[];\n  usedGroups: string[];\n  onSubmit: (person: Person) => void;\n}\n\nexport const PersonForm = ({ usedNames, usedGroups, onSubmit }: Props) => {\n  const { errors, handleSubmit, register, reset } = useForm();\n  const submitHandler: SubmitHandler<FormValues> = (data) => {\n    onSubmit({\n      name: data.name,\n      group: data.group === '' ? undefined : data.group,\n    });\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(submitHandler)}>\n      <fieldset>\n        <legend>Add a New Person</legend>\n        <label htmlFor=\"name\" className=\"label-required\">\n          Name\n        </label>\n        <input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          ref={register({\n            required: 'A name is required',\n            validate: (value) =>\n              (value && !usedNames.includes(value)) ||\n              'The name must be unique',\n          })}\n        />\n        <ErrorMessage errors={errors} name=\"name\" as={ValidationError} />\n\n        <label htmlFor=\"group\">Group</label>\n        <input\n          id=\"group\"\n          name=\"group\"\n          type=\"text\"\n          list=\"groupOptions\"\n          autoComplete=\"off\"\n          ref={register}\n        />\n        <datalist id=\"groupOptions\">\n          {usedGroups.map((group) => (\n            <option key={group}>{group}</option>\n          ))}\n        </datalist>\n        <p className=\"meta\">\n          Use groups for simple exclusions to prevent people in the same group\n          from matching with each other.\n        </p>\n        <button type=\"submit\">Add Person</button>\n      </fieldset>\n    </form>\n  );\n};\n","import * as React from 'react';\nimport { Person } from 'gift-exchange';\n\n/*\n we need to key on something when rendering the list of groups,\n hopefully no user will ever enter this GUID...\n*/\nconst UNDEFINED_GROUP = 'fba449b5-deb3-400c-991c-4bac2bb1ad33';\n\ninterface PeopleListProps {\n  people: Person[];\n  removePerson: (person: Person) => void;\n}\n\nexport function People({ people, removePerson }: PeopleListProps) {\n  const groups = people.reduce<\n    Array<{\n      group: string | null;\n      people: Person[];\n    }>\n  >((acc, person) => {\n    const group = acc.find((item) => item.group === (person.group ?? null));\n    if (group) {\n      group.people.push(person);\n    } else {\n      acc.push({\n        group: person.group ?? null,\n        people: [person],\n      });\n    }\n    return acc;\n  }, []);\n\n  return (\n    <dl>\n      {groups.map((group) => (\n        <React.Fragment key={group.group ?? UNDEFINED_GROUP}>\n          <dt>\n            {group.group === null ? <strong>No Group</strong> : group.group}\n          </dt>\n          {group.people.map((p) => (\n            <dd key={p.name}>\n              {p.name} <button onClick={() => removePerson(p)}>Remove</button>\n            </dd>\n          ))}\n        </React.Fragment>\n      ))}\n    </dl>\n  );\n}\n","import * as React from 'react';\nimport { Person } from 'gift-exchange';\n\ninterface Props {\n  pairs: [Person, Person][];\n  showGroups: boolean;\n}\n\nexport function Pairs({ pairs, showGroups }: Props) {\n  if (pairs.length < 1) {\n    return null;\n  }\n\n  return (\n    <table>\n      <caption>Secret Santa Matches</caption>\n      <thead>\n        <tr>\n          <th colSpan={showGroups ? 2 : 1}>Giver</th>\n          <th colSpan={showGroups ? 2 : 1}>Receiver</th>\n        </tr>\n        {showGroups && (\n          <tr>\n            <th>Name</th>\n            <th>Group</th>\n            <th>Name</th>\n            <th>Group</th>\n          </tr>\n        )}\n      </thead>\n      <tbody>\n        {pairs.map(([a, b]) => (\n          <tr key={a.name}>\n            <td>{a.name}</td>\n            {showGroups && <td>{a.group}</td>}\n            <td>{b.name}</td>\n            {showGroups && <td>{b.group}</td>}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import { Exclusion, Person } from 'gift-exchange';\n\nfunction matchPairs(people: Person[], exclusions?: Exclusion[]) {\n  // @ts-ignore\n  return (GiftExchange.calculateSync(people, {\n    exclusions,\n    timeout: 5000,\n  }) as Person[]).map<[Person, Person]>((p, i) => [people[i], p]);\n}\n\nexport default matchPairs;\n","import * as React from 'react';\nimport { Exclusion, Person } from 'gift-exchange';\nimport { useWorker } from '@koale/useworker';\nimport { Pairs } from './Pairs';\nimport matchPairs from './match-pairs';\nimport './matches.css';\n\ninterface Props {\n  people: Person[];\n  exclusions: Exclusion[];\n}\n\nconst giftExchangeUmdPath =\n  window.location.origin +\n  process.env.PUBLIC_URL +\n  (process.env.NODE_ENV === 'production'\n    ? '/gift-exchange.umd.production.min.js'\n    : '/gift-exchange.umd.development.js');\n\nexport function Matches({ people, exclusions }: Props) {\n  const [pairs, setPairs] = React.useState<[Person, Person][]>([]);\n  const [error, setError] = React.useState<null | Error>(null);\n  const [showGroups, setShowGroups] = React.useState(false);\n\n  // needs to be a layout effect to prevent flashing when changing people\n  React.useLayoutEffect(() => {\n    setPairs([]);\n  }, [people, exclusions]);\n\n  const [workerFn, { status: workerStatus, kill: terminateWorker }] = useWorker(\n    matchPairs,\n    {\n      autoTerminate: false,\n      remoteDependencies: [giftExchangeUmdPath],\n    }\n  );\n\n  React.useEffect(() => {\n    if (workerStatus === 'ERROR') {\n      setError(\n        new Error(\n          'There was an error with the matching Worker, please try again.'\n        )\n      );\n    }\n  }, [workerStatus]);\n\n  React.useEffect(\n    () => () => {\n      terminateWorker();\n    },\n    [terminateWorker]\n  );\n\n  const calculateMatches = async () => {\n    setError(null);\n    workerFn(people, exclusions)\n      .then((matches) => {\n        setPairs(matches);\n      })\n      .catch((e) => {\n        if (e.message.startsWith('DerangementError')) {\n          setError(\n            new Error(\n              'No matches are possible with the given people and exclusions.'\n            )\n          );\n        } else {\n          setError(e);\n        }\n        setPairs([]);\n      });\n  };\n\n  return (\n    <>\n      <button\n        onClick={calculateMatches}\n        type=\"button\"\n        disabled={people.length < 1 || workerStatus === 'RUNNING'}\n      >\n        Match\n      </button>{' '}\n      <label>\n        <input\n          type=\"checkbox\"\n          onChange={() => setShowGroups((prevState) => !prevState)}\n          checked={showGroups}\n        />{' '}\n        Show Groups\n      </label>\n      {error && <span className=\"error\">{error.message}</span>}\n      <Pairs pairs={error ? [] : pairs} showGroups={showGroups} />\n    </>\n  );\n}\n","import { Exclusion } from 'gift-exchange';\n\nexport const exclusionKey = (exclusion: Exclusion) =>\n  exclusion.type +\n  exclusion.subject +\n  exclusion.excludedType +\n  exclusion.excludedSubject;\n","import * as React from 'react';\nimport { EnhancedExclusion } from '../Main';\n\ninterface Props {\n  exclusions: EnhancedExclusion[];\n  removeExclusion: (exclusionKey: EnhancedExclusion['key']) => void;\n}\n\ninterface ExclusionItemProps {\n  exclusion: EnhancedExclusion;\n  removeHandler: () => void;\n}\n\nconst ExclusionItem = ({ exclusion, removeHandler }: ExclusionItemProps) => (\n  <dd>\n    <strong>{exclusion.subject}</strong> cannot give to{' '}\n    {exclusion.excludedType === 'group' && 'group '}\n    <strong>{exclusion.excludedSubject}</strong>{' '}\n    <button onClick={removeHandler}>Remove</button>\n  </dd>\n);\n\nexport function Exclusions({ exclusions, removeExclusion }: Props) {\n  const names = exclusions.filter((e) => e.type === 'name');\n  const groups = exclusions.filter((e) => e.type === 'group');\n\n  return (\n    <dl>\n      {names.length > 0 && <dt>Person</dt>}\n      {names.map((e) => (\n        <ExclusionItem\n          key={e.key}\n          exclusion={e}\n          removeHandler={() => removeExclusion(e.key)}\n        />\n      ))}\n      {groups.length > 0 && <dt>Group</dt>}\n      {groups.map((e) => (\n        <ExclusionItem\n          key={e.key}\n          exclusion={e}\n          removeHandler={() => removeExclusion(e.key)}\n        />\n      ))}\n    </dl>\n  );\n}\n","import * as React from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport '../common/form.css';\nimport { Exclusion } from 'gift-exchange';\nimport { exclusionKey } from '../common/utils';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { ValidationError } from '../common/ValidationError';\n\ntype FormValues = Exclusion;\n\ninterface Props {\n  usedNames: string[];\n  usedGroups: string[];\n  usedExclusionKeys: string[];\n  onSubmit: (exclusion: Exclusion) => void;\n}\n\nexport const ExclusionForm = ({\n  usedNames,\n  usedGroups,\n  usedExclusionKeys,\n  onSubmit,\n}: Props) => {\n  const { errors, handleSubmit, register, reset, setError, watch } = useForm();\n  const submitHandler: SubmitHandler<FormValues> = (data) => {\n    if (usedExclusionKeys.includes(exclusionKey(data))) {\n      setError('excludedSubject', { message: 'This exclusion already exists' });\n      return;\n    }\n    onSubmit(data);\n    reset();\n  };\n\n  const type = watch('type', 'name');\n  const excludedType = watch('excludedType', 'name');\n\n  return (\n    <form onSubmit={handleSubmit(submitHandler)}>\n      <p>A Source will not be matched with the Excluded.</p>\n      <fieldset>\n        <legend>Source</legend>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"name\"\n            defaultChecked\n            ref={register({\n              required: 'A type is required',\n            })}\n          />{' '}\n          Name\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"group\"\n            ref={register({\n              required: 'A type is required',\n            })}\n          />{' '}\n          Group\n        </label>\n        <ErrorMessage errors={errors} name=\"type\" as={ValidationError} />\n\n        <label htmlFor=\"subject\">Subject</label>\n        <select\n          id=\"subject\"\n          name=\"subject\"\n          disabled={(type === 'name' ? usedNames : usedGroups).length < 1}\n          ref={register({\n            required: `A ${type} is required`,\n            validate: (value) =>\n              type === 'name'\n                ? usedNames.includes(value)\n                : usedGroups.includes(value),\n          })}\n        >\n          {(type === 'name' ? usedNames : usedGroups).map((item) => (\n            <option key={item}>{item}</option>\n          ))}\n        </select>\n        <ErrorMessage errors={errors} name=\"subject\" as={ValidationError} />\n      </fieldset>\n      <fieldset>\n        <legend>Excluded</legend>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"excludedType\"\n            value=\"name\"\n            defaultChecked\n            ref={register({\n              required: 'A type is required',\n            })}\n          />{' '}\n          Name\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"excludedType\"\n            value=\"group\"\n            ref={register({\n              required: 'A type is required',\n            })}\n          />{' '}\n          Group\n        </label>\n        <ErrorMessage\n          errors={errors}\n          name=\"excludedType\"\n          as={ValidationError}\n        />\n\n        <label htmlFor=\"excludedSubject\">Subject</label>\n        <select\n          id=\"excludedSubject\"\n          name=\"excludedSubject\"\n          disabled={\n            (excludedType === 'name' ? usedNames : usedGroups).length < 1\n          }\n          ref={register({\n            required: `A ${excludedType} is required`,\n            validate: (value) =>\n              excludedType === 'name'\n                ? usedNames.includes(value)\n                : usedGroups.includes(value),\n          })}\n        >\n          {(excludedType === 'name' ? usedNames : usedGroups).map((item) => (\n            <option key={item}>{item}</option>\n          ))}\n        </select>\n        <ErrorMessage\n          errors={errors}\n          name=\"excludedSubject\"\n          as={ValidationError}\n        />\n      </fieldset>\n      <button type=\"submit\">Add Exclusion</button>\n    </form>\n  );\n};\n","import * as React from 'react';\n\ninterface Props {\n  children?: React.ReactNode;\n  heading: string;\n}\n\nexport function Section({ children, heading }: Props) {\n  return (\n    <section>\n      <h2>{heading}</h2>\n      {children}\n    </section>\n  );\n}\n","import * as React from 'react';\nimport { PersonForm } from './people/PersonForm';\nimport { People } from './people/People';\nimport { Exclusion, Person } from 'gift-exchange';\nimport { Matches } from './matches/Matches';\nimport { exclusionKey } from './common/utils';\nimport { Exclusions } from './exclusions/Exclusions';\nimport { ExclusionForm } from './exclusions/ExclusionForm';\nimport { Section } from './common/Section';\nimport { Tab, TabList, TabPanels, Tabs, TabPanel } from '@reach/tabs';\nimport './common/tabs.css';\n\nexport interface EnhancedExclusion extends Exclusion {\n  key: string;\n}\n\nconst isString = (str: unknown): str is string => typeof str === 'string';\n\nexport function Main() {\n  const [people, setPeople] = React.useState<Person[]>([]);\n  const [exclusions, setExclusions] = React.useState<EnhancedExclusion[]>([]);\n\n  const usedNames = React.useMemo(() => people.map((p) => p.name), [people]);\n  const usedGroups = React.useMemo(\n    () => [...new Set(people.map((p) => p.group).filter(isString))],\n    [people]\n  );\n  const usedExclusionKeys = React.useMemo(() => exclusions.map((e) => e.key), [\n    exclusions,\n  ]);\n\n  const addPerson = (person: Person) => {\n    setPeople((prev) => prev.concat(person));\n  };\n\n  const removePerson = (person: Person) => {\n    setPeople((prevPeople) => prevPeople.filter((p) => p.name !== person.name));\n  };\n\n  const addExclusion = (exclusion: Exclusion) => {\n    setExclusions((prevExclusions) =>\n      prevExclusions.concat({ ...exclusion, key: exclusionKey(exclusion) })\n    );\n  };\n\n  const removeExclusion = (exclusionKey: string) => {\n    setExclusions((prevExclusions) =>\n      prevExclusions.filter((p) => p.key !== exclusionKey)\n    );\n  };\n\n  return (\n    <main>\n      <Tabs>\n        <TabList>\n          <Tab>People</Tab>\n          <Tab>Exclusions</Tab>\n          <Tab disabled={people.length < 1}>Matches</Tab>\n        </TabList>\n\n        <TabPanels>\n          <TabPanel>\n            <Section heading=\"People\">\n              <PersonForm\n                usedNames={usedNames}\n                usedGroups={usedGroups}\n                onSubmit={addPerson}\n              />\n              <People people={people} removePerson={removePerson} />\n            </Section>\n          </TabPanel>\n          <TabPanel>\n            <Section heading=\"Exclusions\">\n              <ExclusionForm\n                usedNames={usedNames}\n                usedGroups={usedGroups}\n                usedExclusionKeys={usedExclusionKeys}\n                onSubmit={addExclusion}\n              />\n              <Exclusions\n                exclusions={exclusions}\n                removeExclusion={removeExclusion}\n              />\n            </Section>\n          </TabPanel>\n          <TabPanel>\n            <Section heading=\"Matches\">\n              <Matches people={people} exclusions={exclusions} />\n            </Section>\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </main>\n  );\n}\n","import * as React from 'react';\nimport { Main } from './Main';\n\nconst emoji = [\n  '🎅',\n  '🎅🏻',\n  '🎅🏼',\n  '🎅🏽',\n  '🎅🏾',\n  '🎅🏿',\n  '🤶',\n  '🤶🏻',\n  '🤶🏼',\n  '🤶🏽',\n  '🤶🏾',\n  '🤶🏿',\n];\nconst santa = emoji[Math.floor(Math.random() * emoji.length)];\nfunction App() {\n  React.useEffect(() => {\n    document.title = `Secret Santa ${santa}`;\n  }, []);\n\n  return (\n    <>\n      <header>\n        <h1>\n          Secret Santa{' '}\n          <span role=\"presentation\" aria-hidden=\"true\">\n            {santa}\n          </span>\n        </h1>\n        <p>\n          By{' '}\n          <a href=\"https://brianm.me\" rel=\"noopener noreferrer\">\n            Brian Mitchell\n          </a>\n          . View the source on{' '}\n          <a\n            href=\"https://github.com/BrianMitchL/secret-santa\"\n            rel=\"noopener noreferrer\"\n          >\n            GitHub\n          </a>\n          .\n        </p>\n      </header>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@exampledev/new.css';\nimport 'typeface-inter';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}