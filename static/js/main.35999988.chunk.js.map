{"version":3,"sources":["common/ValidationError.tsx","people/PersonForm.tsx","common/x.svg","common/RemoveButton.tsx","people/People.tsx","people/map-people-by-group.ts","matches/Pairs.tsx","matches/match-pairs.ts","matches/Matches.tsx","common/utils.ts","exclusions/Exclusions.tsx","exclusions/ExclusionForm.tsx","common/Section.tsx","Seed.tsx","common/useStoredState.ts","Main.tsx","App.tsx","index.tsx"],"names":["ValidationError","children","className","role","PersonForm","usedNames","usedGroups","onSubmit","handleSubmit","register","reset","formState","errors","useForm","data","name","group","undefined","htmlFor","id","required","validate","value","includes","type","aria-required","aria-invalid","as","list","autoComplete","map","_line","_line2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgX","title","titleId","props","svgRef","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ref","x1","y1","x2","y2","ForwardRef","RemoveButton","onClick","aria-hidden","People","people","removePerson","groups","useMemo","reduce","acc","person","find","item","push","sort","a","b","localeCompare","mapPeopleByGroup","aria-labelledby","groupId","p","Pairs","pairs","showGroups","colSpan","matchPairs","exclusions","GiftExchange","calculate","timeout","giftExchangeUmdPath","window","location","origin","errorMessage","Matches","setPairs","useState","error","setError","setShowGroups","useLayoutEffect","workerFn","status","workerStatus","kill","terminateWorker","useWorker","autoTerminate","remoteDependencies","useEffect","Error","async","e","console","disabled","onChange","prevState","checked","message","exclusionKey","exclusion","subject","excludedType","excludedSubject","ExclusionItem","removeHandler","Exclusions","removeExclusion","names","filter","ExclusionForm","usedExclusionKeys","watch","style","display","flexWrap","flex","defaultChecked","Section","heading","date","Date","Array","from","keys","num","setMonth","toLocaleDateString","month","Seed","setPeople","setExclusions","index","Math","floor","toString","es","useStoredState","defaultValue","setValue","localStorage","getItem","JSON","parse","setItem","stringify","isString","str","Main","Set","prev","concat","prevPeople","prevExclusions","emoji","santa","random","App","document","href","rel","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.35999988.chunk.js","sourcesContent":["import { ReactNode } from 'react';\n\ninterface Props {\n  children?: ReactNode;\n}\n\nexport function ValidationError({ children }: Props) {\n  return (\n    <span className=\"validation\" role=\"alert\">\n      {children}\n    </span>\n  );\n}\n","import { SubmitHandler, useForm } from 'react-hook-form';\nimport '../common/form.css';\nimport { Person } from 'gift-exchange';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { ValidationError } from '../common/ValidationError';\n\ntype FormValues = {\n  ['person-name']: string;\n  ['person-group']: string;\n};\n\ninterface Props {\n  usedNames: string[];\n  usedGroups: string[];\n  onSubmit: (person: Person) => void;\n}\n\nexport const PersonForm = ({ usedNames, usedGroups, onSubmit }: Props) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const submitHandler: SubmitHandler<FormValues> = (data) => {\n    onSubmit({\n      name: data['person-name'],\n      group: data['person-group'] === '' ? undefined : data['person-group'],\n    });\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(submitHandler)}>\n      <fieldset>\n        <legend>Add a New Person</legend>\n        <label htmlFor=\"person-name\" className=\"label-required\">\n          Name\n        </label>\n        <input\n          id=\"person-name\"\n          {...register('person-name', {\n            required: 'A name is required',\n            validate: (value) =>\n              (value && !usedNames.includes(value)) ||\n              'The name must be unique',\n          })}\n          type=\"text\"\n          aria-required\n          aria-invalid={errors['person-name'] ? 'true' : 'false'}\n        />\n        <ErrorMessage errors={errors} name=\"person-name\" as={ValidationError} />\n\n        <label htmlFor=\"person-group\">Group</label>\n        <input\n          id=\"person-group\"\n          {...register('person-group')}\n          type=\"text\"\n          list=\"groupOptions\"\n          autoComplete=\"off\"\n        />\n        <datalist id=\"groupOptions\">\n          {usedGroups.map((group) => (\n            <option key={group}>{group}</option>\n          ))}\n        </datalist>\n        <p className=\"meta\">\n          Use groups for simple exclusions to prevent people in the same group\n          from matching with each other. For example, people in the same family\n          or household.\n        </p>\n        <button type=\"submit\">Add Person</button>\n      </fieldset>\n    </form>\n  );\n};\n","var _line, _line2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgX({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 18,\n    y1: 6,\n    x2: 6,\n    y2: 18\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6,\n    y1: 6,\n    x2: 18,\n    y2: 18\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.89dd971e.svg\";\nexport { ForwardRef as ReactComponent };","import { MouseEventHandler } from 'react';\nimport VisuallyHidden from '@reach/visually-hidden';\nimport { ReactComponent as X } from './x.svg';\n\ninterface Props {\n  onClick: MouseEventHandler<HTMLButtonElement>;\n}\n\nexport function RemoveButton({ onClick }: Props) {\n  return (\n    <button onClick={onClick} className=\"muted\" title=\"Remove\" type=\"button\">\n      <VisuallyHidden>Remove</VisuallyHidden>\n      <X aria-hidden />\n    </button>\n  );\n}\n","import { useMemo } from 'react';\nimport { Person } from 'gift-exchange';\nimport VisuallyHidden from '@reach/visually-hidden';\nimport { RemoveButton } from '../common/RemoveButton';\nimport { mapPeopleByGroup } from './map-people-by-group';\n\n/*\n we need to key on something when rendering the list of groups,\n hopefully no user will ever enter this GUID...\n*/\nconst UNDEFINED_GROUP = 'fba449b5-deb3-400c-991c-4bac2bb1ad33';\n\ninterface PeopleListProps {\n  people: Person[];\n  removePerson: (person: Person) => void;\n}\n\nexport function People({ people, removePerson }: PeopleListProps) {\n  const groups = useMemo(() => mapPeopleByGroup(people), [people]);\n\n  if (!people.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <h3 id=\"added-people-heading\">Added People</h3>\n      <ul aria-labelledby=\"added-people-heading\">\n        {groups.map((group) => {\n          const groupId = `person-group-${group.group ?? UNDEFINED_GROUP}`;\n          return (\n            <li key={groupId}>\n              <span id={groupId}>\n                <VisuallyHidden>Group </VisuallyHidden>\n                {group.group === null ? 'No Group' : group.group}\n              </span>\n              <ul aria-labelledby={groupId}>\n                {group.people.map((p) => (\n                  <li key={p.name}>\n                    {p.name} <RemoveButton onClick={() => removePerson(p)} />\n                  </li>\n                ))}\n              </ul>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n","import { Person } from 'gift-exchange';\n\nexport function mapPeopleByGroup(people: Person[]) {\n  return people\n    .reduce<\n      Array<{\n        group: string | null;\n        people: Person[];\n      }>\n    >((acc, person) => {\n      const group = acc.find((item) => item.group === (person.group ?? null));\n      if (group) {\n        group.people.push(person);\n      } else {\n        acc.push({\n          group: person.group ?? null,\n          people: [person],\n        });\n      }\n      return acc;\n    }, [])\n    .sort((a, b) => {\n      if (a.group === null || b.group === null) {\n        return 1;\n      }\n\n      return a.group.localeCompare(b.group);\n    });\n}\n","import { Person } from 'gift-exchange';\n\ninterface Props {\n  pairs: [Person, Person][];\n  showGroups: boolean;\n}\n\nexport function Pairs({ pairs, showGroups }: Props) {\n  if (pairs.length < 1) {\n    return null;\n  }\n\n  return (\n    <table>\n      <caption>Secret Santa Matches</caption>\n      <thead>\n        <tr>\n          <th colSpan={showGroups ? 2 : 1}>Giver</th>\n          <th colSpan={showGroups ? 2 : 1}>Receiver</th>\n        </tr>\n        {showGroups && (\n          <tr>\n            <th>Name</th>\n            <th>Group</th>\n            <th>Name</th>\n            <th>Group</th>\n          </tr>\n        )}\n      </thead>\n      <tbody>\n        {pairs.map(([a, b]) => (\n          <tr key={a.name}>\n            <td>{a.name}</td>\n            {showGroups && <td>{a.group}</td>}\n            <td>{b.name}</td>\n            {showGroups && <td>{b.group}</td>}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import { Exclusion, Person, calculate } from 'gift-exchange';\n\ndeclare global {\n  var GiftExchange: {\n    calculate: typeof calculate;\n  };\n}\n\nfunction matchPairs(people: Person[], exclusions?: Exclusion[]) {\n  return (\n    GiftExchange.calculate(people, {\n      exclusions,\n      timeout: 5000,\n    }) as Person[]\n  ).map<[Person, Person]>((p, i) => [people[i], p]);\n}\n\nexport default matchPairs;\n","import { useEffect, useLayoutEffect, useState } from 'react';\nimport { Exclusion, Person } from 'gift-exchange';\nimport { useWorker } from '@koale/useworker';\nimport { Pairs } from './Pairs';\nimport matchPairs from './match-pairs';\nimport './matches.css';\n\ninterface Props {\n  people: Person[];\n  exclusions: Exclusion[];\n}\n\nconst giftExchangeUmdPath =\n  window.location.origin +\n  process.env.PUBLIC_URL +\n  (process.env.NODE_ENV === 'production'\n    ? '/giftexchange.umd.production.min.js'\n    : '/giftexchange.umd.development.js');\n\nconst errorMessage =\n  'No matches are possible with the given people and exclusions, or there was an error with the matching Worker. Please try again or change your configuration to allow everyone to match with someone.';\n\nexport function Matches({ people, exclusions }: Props) {\n  const [pairs, setPairs] = useState<[Person, Person][]>([]);\n  const [error, setError] = useState<null | Error>(null);\n  const [showGroups, setShowGroups] = useState(false);\n\n  // needs to be a layout effect to prevent flashing when changing people\n  useLayoutEffect(() => {\n    setPairs([]);\n  }, [people, exclusions]);\n\n  const [workerFn, { status: workerStatus, kill: terminateWorker }] = useWorker(\n    matchPairs,\n    {\n      autoTerminate: false,\n      remoteDependencies: [giftExchangeUmdPath],\n    }\n  );\n\n  useEffect(() => {\n    if (workerStatus === 'ERROR') {\n      setError(new Error(errorMessage));\n    }\n  }, [workerStatus]);\n\n  useEffect(\n    () => () => {\n      terminateWorker();\n    },\n    [terminateWorker]\n  );\n\n  const calculateMatches = async () => {\n    setError(null);\n    try {\n      setPairs(await workerFn(people, exclusions));\n    } catch (e) {\n      console.error(e);\n      setError(new Error(errorMessage));\n      setPairs([]);\n    }\n  };\n\n  return (\n    <>\n      <button\n        onClick={calculateMatches}\n        type=\"button\"\n        disabled={people.length < 1 || workerStatus === 'RUNNING'}\n      >\n        Match\n      </button>{' '}\n      <label>\n        <input\n          type=\"checkbox\"\n          onChange={() => setShowGroups((prevState) => !prevState)}\n          checked={showGroups}\n        />{' '}\n        Show Groups\n      </label>\n      {error && <p className=\"error\">{error.message}</p>}\n      <Pairs pairs={error ? [] : pairs} showGroups={showGroups} />\n    </>\n  );\n}\n","import { Exclusion } from 'gift-exchange';\n\nexport const exclusionKey = (exclusion: Exclusion) =>\n  exclusion.type +\n  exclusion.subject +\n  exclusion.excludedType +\n  exclusion.excludedSubject;\n","import { EnhancedExclusion } from '../Main';\nimport { RemoveButton } from '../common/RemoveButton';\n\ninterface Props {\n  exclusions: EnhancedExclusion[];\n  removeExclusion: (exclusionKey: EnhancedExclusion['key']) => void;\n}\n\ninterface ExclusionItemProps {\n  exclusion: EnhancedExclusion;\n  removeHandler: () => void;\n}\n\nconst ExclusionItem = ({ exclusion, removeHandler }: ExclusionItemProps) => (\n  <li>\n    <strong>{exclusion.subject}</strong> cannot give to{' '}\n    {exclusion.excludedType === 'group' && 'group '}\n    <strong>{exclusion.excludedSubject}</strong>{' '}\n    <RemoveButton onClick={removeHandler} />\n  </li>\n);\n\nexport function Exclusions({ exclusions, removeExclusion }: Props) {\n  if (!exclusions.length) {\n    return null;\n  }\n\n  const names = exclusions.filter((e) => e.type === 'name');\n  const groups = exclusions.filter((e) => e.type === 'group');\n\n  return (\n    <>\n      <h3 id=\"added-exclusions-heading\">Added Exclusions</h3>\n      <ul aria-labelledby=\"added-exclusions-heading\">\n        {names.length > 0 && (\n          <li>\n            <span id=\"added-exclusions-person\">Person</span>\n            <ul aria-labelledby=\"added-exclusions-person\">\n              {names.map((e) => (\n                <ExclusionItem\n                  key={e.key}\n                  exclusion={e}\n                  removeHandler={() => removeExclusion(e.key)}\n                />\n              ))}\n            </ul>\n          </li>\n        )}\n\n        {groups.length > 0 && (\n          <li>\n            <span id=\"added-exclusions-group\">Group</span>\n            <ul aria-labelledby=\"added-exclusions-group\">\n              {groups.map((e) => (\n                <ExclusionItem\n                  key={e.key}\n                  exclusion={e}\n                  removeHandler={() => removeExclusion(e.key)}\n                />\n              ))}\n            </ul>\n          </li>\n        )}\n      </ul>\n    </>\n  );\n}\n","import { SubmitHandler, useForm } from 'react-hook-form';\nimport '../common/form.css';\nimport { Exclusion } from 'gift-exchange';\nimport { exclusionKey } from '../common/utils';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { ValidationError } from '../common/ValidationError';\n\ntype FormValues = Exclusion;\n\ninterface Props {\n  usedNames: string[];\n  usedGroups: string[];\n  usedExclusionKeys: string[];\n  onSubmit: (exclusion: Exclusion) => void;\n}\n\nexport const ExclusionForm = ({\n  usedNames,\n  usedGroups,\n  usedExclusionKeys,\n  onSubmit,\n}: Props) => {\n  const {\n    handleSubmit,\n    register,\n    reset,\n    setError,\n    watch,\n    formState: { errors },\n  } = useForm<FormValues>();\n  const submitHandler: SubmitHandler<FormValues> = (data) => {\n    if (usedExclusionKeys.includes(exclusionKey(data))) {\n      setError('excludedSubject', { message: 'This exclusion already exists' });\n      return;\n    }\n    onSubmit(data);\n    reset();\n  };\n\n  const type = watch('type', 'name');\n  const excludedType = watch('excludedType', 'name');\n\n  return (\n    <form\n      onSubmit={handleSubmit(submitHandler)}\n      style={{ display: 'flex', flexWrap: 'wrap' }}\n    >\n      <p style={{ flex: '1 0 100%' }}>\n        A Source will not be matched with the Excluded.\n      </p>\n      <fieldset style={{ flex: '1 0 auto' }}>\n        <legend>Source</legend>\n        <label>\n          <input\n            type=\"radio\"\n            {...register('type', {\n              required: 'A type is required',\n            })}\n            value=\"name\"\n            defaultChecked\n          />{' '}\n          Name\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            {...register('type', {\n              required: 'A type is required',\n            })}\n            value=\"group\"\n          />{' '}\n          Group\n        </label>\n        <ErrorMessage errors={errors} name=\"type\" as={ValidationError} />\n\n        <label htmlFor=\"subject\">Subject</label>\n        <select\n          id=\"subject\"\n          {...register('subject', {\n            required: `A ${type} is required`,\n            validate: (value) =>\n              type === 'name'\n                ? usedNames.includes(value)\n                : usedGroups.includes(value),\n          })}\n          disabled={(type === 'name' ? usedNames : usedGroups).length < 1}\n        >\n          {(type === 'name' ? usedNames : usedGroups).map((item) => (\n            <option key={item}>{item}</option>\n          ))}\n        </select>\n        <ErrorMessage errors={errors} name=\"subject\" as={ValidationError} />\n      </fieldset>\n      <fieldset style={{ flex: '1 0 auto' }}>\n        <legend>Excluded</legend>\n        <label>\n          <input\n            type=\"radio\"\n            {...register('excludedType', {\n              required: 'A type is required',\n            })}\n            value=\"name\"\n            defaultChecked\n          />{' '}\n          Name\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            {...register('excludedType', {\n              required: 'A type is required',\n            })}\n            value=\"group\"\n          />{' '}\n          Group\n        </label>\n        <ErrorMessage\n          errors={errors}\n          name=\"excludedType\"\n          as={ValidationError}\n        />\n\n        <label htmlFor=\"excludedSubject\">Subject</label>\n        <select\n          id=\"excludedSubject\"\n          {...register('excludedSubject', {\n            required: `A ${excludedType} is required`,\n            validate: (value) =>\n              excludedType === 'name'\n                ? usedNames.includes(value)\n                : usedGroups.includes(value),\n          })}\n          disabled={\n            (excludedType === 'name' ? usedNames : usedGroups).length < 1\n          }\n        >\n          {(excludedType === 'name' ? usedNames : usedGroups).map((item) => (\n            <option key={item}>{item}</option>\n          ))}\n        </select>\n        <ErrorMessage\n          errors={errors}\n          name=\"excludedSubject\"\n          as={ValidationError}\n        />\n      </fieldset>\n      <div style={{ flex: '0 0 100%' }}>\n        <button type=\"submit\">Add Exclusion</button>\n      </div>\n    </form>\n  );\n};\n","import { ReactNode } from 'react';\n\ninterface Props {\n  children?: ReactNode;\n  heading: string;\n}\n\nexport function Section({ children, heading }: Props) {\n  return (\n    <section>\n      <h2>{heading}</h2>\n      {children}\n    </section>\n  );\n}\n","import { Exclusion, Person } from 'gift-exchange';\nimport { exclusionKey } from './common/utils';\nimport { EnhancedExclusion } from './Main';\n\nconst date = new Date();\n\nconst names = Array.from(Array(12).keys()).map((num) => {\n  date.setMonth(num);\n  return date.toLocaleDateString(undefined, { month: 'long' });\n});\n\ninterface Props {\n  setPeople: (people: Person[]) => void;\n  setExclusions: (exclusions: EnhancedExclusion[]) => void;\n  disabled?: boolean;\n}\n\nexport function Seed({ setPeople, setExclusions, disabled }: Props) {\n  const handleClick = () => {\n    setPeople(\n      names.map((name, index) => ({\n        name,\n        group: (Math.floor(index % 3) + 1).toString(),\n      }))\n    );\n\n    const es: Exclusion[] = [\n      {\n        type: 'group',\n        subject: '1',\n        excludedType: 'name',\n        excludedSubject: names[1],\n      },\n      {\n        type: 'name',\n        subject: names[5],\n        excludedType: 'group',\n        excludedSubject: '2',\n      },\n    ];\n    setExclusions(es.map((e) => ({ ...e, key: exclusionKey(e) })));\n  };\n\n  return (\n    <button onClick={handleClick} type=\"button\" disabled={disabled}>\n      Fill with Example Data\n    </button>\n  );\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\nexport const useStoredState = <\n  S extends string | number | boolean | null | {} | []\n>(\n  key: string,\n  defaultValue: S\n): [S, Dispatch<SetStateAction<S>>] => {\n  const [value, setValue] = useState<S>(() => {\n    const value = localStorage.getItem(key);\n    return value !== null ? JSON.parse(value) : defaultValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n","import { useMemo } from 'react';\nimport { PersonForm } from './people/PersonForm';\nimport { People } from './people/People';\nimport { Exclusion, Person } from 'gift-exchange';\nimport { Matches } from './matches/Matches';\nimport { exclusionKey } from './common/utils';\nimport { Exclusions } from './exclusions/Exclusions';\nimport { ExclusionForm } from './exclusions/ExclusionForm';\nimport { Section } from './common/Section';\nimport { Tab, TabList, TabPanels, Tabs, TabPanel } from '@reach/tabs';\nimport './common/tabs.css';\nimport { Seed } from './Seed';\nimport { useStoredState } from './common/useStoredState';\n\nexport interface EnhancedExclusion extends Exclusion {\n  key: string;\n}\n\nconst isString = (str: unknown): str is string => typeof str === 'string';\n\nexport function Main() {\n  const [people, setPeople] = useStoredState<Person[]>(\n    'secret-santa-people',\n    []\n  );\n  const [exclusions, setExclusions] = useStoredState<EnhancedExclusion[]>(\n    'secret-santa-exclusions',\n    []\n  );\n\n  const usedNames = useMemo(() => people.map((p) => p.name), [people]);\n  const usedGroups = useMemo(\n    () => [...new Set(people.map((p) => p.group).filter(isString))],\n    [people]\n  );\n  const usedExclusionKeys = useMemo(\n    () => exclusions.map((e) => e.key),\n    [exclusions]\n  );\n\n  const addPerson = (person: Person) => {\n    setPeople((prev) => prev.concat(person));\n  };\n\n  const removePerson = (person: Person) => {\n    setPeople((prevPeople) => prevPeople.filter((p) => p.name !== person.name));\n  };\n\n  const addExclusion = (exclusion: Exclusion) => {\n    setExclusions((prevExclusions) =>\n      prevExclusions.concat({ ...exclusion, key: exclusionKey(exclusion) })\n    );\n  };\n\n  const removeExclusion = (exclusionKey: string) => {\n    setExclusions((prevExclusions) =>\n      prevExclusions.filter((p) => p.key !== exclusionKey)\n    );\n  };\n\n  const clear = () => {\n    setPeople([]);\n    setExclusions([]);\n  };\n\n  return (\n    <main>\n      <section>\n        <p>\n          Create a matching of names for your gift exchange or Secret Santa. It\n          supports grouping of people as well as directional exclusions based on\n          the group or individual name to support all of your custom rules.\n        </p>\n        <Seed\n          setPeople={setPeople}\n          setExclusions={setExclusions}\n          disabled={people.length + exclusions.length !== 0}\n        />{' '}\n        <button className=\"danger\" onClick={clear}>\n          Clear\n        </button>\n      </section>\n      <Tabs>\n        <TabList>\n          <Tab>People</Tab>\n          <Tab>Exclusions</Tab>\n          <Tab disabled={people.length < 1}>Matches</Tab>\n        </TabList>\n\n        <TabPanels>\n          <TabPanel>\n            <Section heading=\"People\">\n              <PersonForm\n                usedNames={usedNames}\n                usedGroups={usedGroups}\n                onSubmit={addPerson}\n              />\n              <People people={people} removePerson={removePerson} />\n            </Section>\n          </TabPanel>\n          <TabPanel>\n            <Section heading=\"Exclusions\">\n              <ExclusionForm\n                usedNames={usedNames}\n                usedGroups={usedGroups}\n                usedExclusionKeys={usedExclusionKeys}\n                onSubmit={addExclusion}\n              />\n              <Exclusions\n                exclusions={exclusions}\n                removeExclusion={removeExclusion}\n              />\n            </Section>\n          </TabPanel>\n          <TabPanel>\n            <Section heading=\"Matches\">\n              <Matches people={people} exclusions={exclusions} />\n            </Section>\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </main>\n  );\n}\n","import { useEffect } from 'react';\nimport { Main } from './Main';\n\nconst emoji = [\n  '🎅',\n  '🎅🏻',\n  '🎅🏼',\n  '🎅🏽',\n  '🎅🏾',\n  '🎅🏿',\n  '🤶',\n  '🤶🏻',\n  '🤶🏼',\n  '🤶🏽',\n  '🤶🏾',\n  '🤶🏿',\n];\nconst santa = emoji[Math.floor(Math.random() * emoji.length)];\n\nfunction App() {\n  useEffect(() => {\n    document.title = `Secret Santa ${santa}`;\n  }, []);\n\n  return (\n    <>\n      <header>\n        <h1>\n          Secret Santa{' '}\n          <span role=\"presentation\" aria-hidden=\"true\">\n            {santa}\n          </span>\n        </h1>\n        <p>\n          By{' '}\n          <a href=\"https://brianm.me\" rel=\"noopener noreferrer\">\n            Brian Mitchell\n          </a>\n          . View the source on{' '}\n          <a\n            href=\"https://github.com/BrianMitchL/secret-santa\"\n            rel=\"noopener noreferrer\"\n          >\n            GitHub\n          </a>\n          .\n        </p>\n      </header>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport '@exampledev/new.css';\nimport 'typeface-inter';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}