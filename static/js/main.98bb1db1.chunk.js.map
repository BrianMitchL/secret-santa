{"version":3,"sources":["common/ValidationError.tsx","people/PersonForm.tsx","common/x.svg","common/RemoveButton.tsx","people/People.tsx","people/map-people-by-group.ts","matches/Pairs.tsx","matches/match-pairs.ts","matches/Matches.tsx","common/utils.ts","exclusions/Exclusions.tsx","exclusions/ExclusionForm.tsx","common/Section.tsx","Seed.tsx","common/useStoredState.ts","Main.tsx","App.tsx","index.tsx"],"names":["ValidationError","children","className","_line","_line2","PersonForm","usedNames","usedGroups","onSubmit","useForm","errors","handleSubmit","register","reset","data","name","group","undefined","htmlFor","id","type","aria-required","ref","required","validate","value","includes","as","list","autoComplete","map","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgX","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","ForwardRef","RemoveButton","onClick","aria-hidden","People","people","removePerson","groups","useMemo","reduce","acc","person","find","item","push","sort","a","b","localeCompare","mapPeopleByGroup","aria-labelledby","groupId","p","Pairs","pairs","showGroups","colSpan","matchPairs","exclusions","GiftExchange","calculate","timeout","giftExchangeUmdPath","window","location","origin","errorMessage","Matches","useState","setPairs","error","setError","setShowGroups","useLayoutEffect","useWorker","autoTerminate","remoteDependencies","workerFn","workerStatus","status","terminateWorker","kill","useEffect","Error","calculateMatches","console","disabled","onChange","prevState","checked","message","exclusionKey","exclusion","subject","excludedType","excludedSubject","ExclusionItem","removeHandler","Exclusions","removeExclusion","names","filter","e","ExclusionForm","usedExclusionKeys","watch","style","display","flexWrap","flex","defaultChecked","Section","heading","date","Date","Array","from","num","setMonth","toLocaleDateString","month","Seed","setPeople","setExclusions","index","Math","floor","toString","es","useStoredState","defaultValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","isString","str","Main","Set","prev","concat","prevPeople","prevExclusions","emoji","santa","random","App","document","role","href","rel","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.98bb1db1.chunk.js","sourcesContent":["import { ReactNode } from 'react';\n\ninterface Props {\n  children?: ReactNode;\n}\n\nexport function ValidationError({ children }: Props) {\n  return <span className=\"validation\">{children}</span>;\n}\n","import { SubmitHandler, useForm } from 'react-hook-form';\nimport '../common/form.css';\nimport { Person } from 'gift-exchange';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { ValidationError } from '../common/ValidationError';\n\ntype FormValues = {\n  ['person-name']: string;\n  ['person-group']: string;\n};\n\ninterface Props {\n  usedNames: string[];\n  usedGroups: string[];\n  onSubmit: (person: Person) => void;\n}\n\nexport const PersonForm = ({ usedNames, usedGroups, onSubmit }: Props) => {\n  const { errors, handleSubmit, register, reset } = useForm();\n  const submitHandler: SubmitHandler<FormValues> = (data) => {\n    onSubmit({\n      name: data['person-name'],\n      group: data['person-group'] === '' ? undefined : data['person-group'],\n    });\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(submitHandler)}>\n      <fieldset>\n        <legend>Add a New Person</legend>\n        <label htmlFor=\"person-name\" className=\"label-required\">\n          Name\n        </label>\n        <input\n          id=\"person-name\"\n          name=\"person-name\"\n          type=\"text\"\n          aria-required\n          ref={register({\n            required: 'A name is required',\n            validate: (value) =>\n              (value && !usedNames.includes(value)) ||\n              'The name must be unique',\n          })}\n        />\n        <ErrorMessage errors={errors} name=\"person-name\" as={ValidationError} />\n\n        <label htmlFor=\"person-group\">Group</label>\n        <input\n          id=\"person-group\"\n          name=\"person-group\"\n          type=\"text\"\n          list=\"groupOptions\"\n          autoComplete=\"off\"\n          ref={register}\n        />\n        <datalist id=\"groupOptions\">\n          {usedGroups.map((group) => (\n            <option key={group}>{group}</option>\n          ))}\n        </datalist>\n        <p className=\"meta\">\n          Use groups for simple exclusions to prevent people in the same group\n          from matching with each other. For example, people in the same family\n          or household.\n        </p>\n        <button type=\"submit\">Add Person</button>\n      </fieldset>\n    </form>\n  );\n};\n","var _line, _line2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 18,\n    y1: 6,\n    x2: 6,\n    y2: 18\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    x1: 6,\n    y1: 6,\n    x2: 18,\n    y2: 18\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.89dd971e.svg\";\nexport { ForwardRef as ReactComponent };","import { MouseEventHandler } from 'react';\nimport VisuallyHidden from '@reach/visually-hidden';\nimport { ReactComponent as X } from './x.svg';\n\ninterface Props {\n  onClick: MouseEventHandler<HTMLButtonElement>;\n}\n\nexport function RemoveButton({ onClick }: Props) {\n  return (\n    <button onClick={onClick} className=\"muted\" title=\"Remove\" type=\"button\">\n      <VisuallyHidden>Remove</VisuallyHidden>\n      <X aria-hidden />\n    </button>\n  );\n}\n","import { useMemo } from 'react';\nimport { Person } from 'gift-exchange';\nimport VisuallyHidden from '@reach/visually-hidden';\nimport { RemoveButton } from '../common/RemoveButton';\nimport { mapPeopleByGroup } from './map-people-by-group';\n\n/*\n we need to key on something when rendering the list of groups,\n hopefully no user will ever enter this GUID...\n*/\nconst UNDEFINED_GROUP = 'fba449b5-deb3-400c-991c-4bac2bb1ad33';\n\ninterface PeopleListProps {\n  people: Person[];\n  removePerson: (person: Person) => void;\n}\n\nexport function People({ people, removePerson }: PeopleListProps) {\n  const groups = useMemo(() => mapPeopleByGroup(people), [people]);\n\n  if (!people.length) {\n    return null;\n  }\n\n  return (\n    <>\n      <h3 id=\"added-people-heading\">Added People</h3>\n      <ul aria-labelledby=\"added-people-heading\">\n        {groups.map((group) => {\n          const groupId = `person-group-${group.group ?? UNDEFINED_GROUP}`;\n          return (\n            <li key={groupId}>\n              <span id={groupId}>\n                <VisuallyHidden>Group </VisuallyHidden>\n                {group.group === null ? 'No Group' : group.group}\n              </span>\n              <ul aria-labelledby={groupId}>\n                {group.people.map((p) => (\n                  <li key={p.name}>\n                    {p.name} <RemoveButton onClick={() => removePerson(p)} />\n                  </li>\n                ))}\n              </ul>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n","import { Person } from 'gift-exchange';\n\nexport function mapPeopleByGroup(people: Person[]) {\n  return people\n    .reduce<\n      Array<{\n        group: string | null;\n        people: Person[];\n      }>\n    >((acc, person) => {\n      const group = acc.find((item) => item.group === (person.group ?? null));\n      if (group) {\n        group.people.push(person);\n      } else {\n        acc.push({\n          group: person.group ?? null,\n          people: [person],\n        });\n      }\n      return acc;\n    }, [])\n    .sort((a, b) => {\n      if (a.group === null || b.group === null) {\n        return 1;\n      }\n\n      return a.group.localeCompare(b.group);\n    });\n}\n","import { Person } from 'gift-exchange';\n\ninterface Props {\n  pairs: [Person, Person][];\n  showGroups: boolean;\n}\n\nexport function Pairs({ pairs, showGroups }: Props) {\n  if (pairs.length < 1) {\n    return null;\n  }\n\n  return (\n    <table>\n      <caption>Secret Santa Matches</caption>\n      <thead>\n        <tr>\n          <th colSpan={showGroups ? 2 : 1}>Giver</th>\n          <th colSpan={showGroups ? 2 : 1}>Receiver</th>\n        </tr>\n        {showGroups && (\n          <tr>\n            <th>Name</th>\n            <th>Group</th>\n            <th>Name</th>\n            <th>Group</th>\n          </tr>\n        )}\n      </thead>\n      <tbody>\n        {pairs.map(([a, b]) => (\n          <tr key={a.name}>\n            <td>{a.name}</td>\n            {showGroups && <td>{a.group}</td>}\n            <td>{b.name}</td>\n            {showGroups && <td>{b.group}</td>}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import { Exclusion, Person, calculate } from 'gift-exchange';\n\ndeclare global {\n  var GiftExchange: {\n    calculate: typeof calculate;\n  };\n}\n\nfunction matchPairs(people: Person[], exclusions?: Exclusion[]) {\n  return (GiftExchange.calculate(people, {\n    exclusions,\n    timeout: 5000,\n  }) as Person[]).map<[Person, Person]>((p, i) => [people[i], p]);\n}\n\nexport default matchPairs;\n","import { useEffect, useLayoutEffect, useState } from 'react';\nimport { Exclusion, Person } from 'gift-exchange';\nimport { useWorker } from '@koale/useworker';\nimport { Pairs } from './Pairs';\nimport matchPairs from './match-pairs';\nimport './matches.css';\n\ninterface Props {\n  people: Person[];\n  exclusions: Exclusion[];\n}\n\nconst giftExchangeUmdPath =\n  window.location.origin +\n  process.env.PUBLIC_URL +\n  (process.env.NODE_ENV === 'production'\n    ? '/giftexchange.umd.production.min.js'\n    : '/giftexchange.umd.development.js');\n\nconst errorMessage =\n  'No matches are possible with the given people and exclusions, or there was an error with the matching Worker. Please try again or change your configuration to allow everyone to match with someone.';\n\nexport function Matches({ people, exclusions }: Props) {\n  const [pairs, setPairs] = useState<[Person, Person][]>([]);\n  const [error, setError] = useState<null | Error>(null);\n  const [showGroups, setShowGroups] = useState(false);\n\n  // needs to be a layout effect to prevent flashing when changing people\n  useLayoutEffect(() => {\n    setPairs([]);\n  }, [people, exclusions]);\n\n  const [workerFn, { status: workerStatus, kill: terminateWorker }] = useWorker(\n    matchPairs,\n    {\n      autoTerminate: false,\n      remoteDependencies: [giftExchangeUmdPath],\n    }\n  );\n\n  useEffect(() => {\n    if (workerStatus === 'ERROR') {\n      setError(new Error(errorMessage));\n    }\n  }, [workerStatus]);\n\n  useEffect(\n    () => () => {\n      terminateWorker();\n    },\n    [terminateWorker]\n  );\n\n  const calculateMatches = async () => {\n    setError(null);\n    try {\n      setPairs(await workerFn(people, exclusions));\n    } catch (e) {\n      console.error(e);\n      setError(new Error(errorMessage));\n      setPairs([]);\n    }\n  };\n\n  return (\n    <>\n      <button\n        onClick={calculateMatches}\n        type=\"button\"\n        disabled={people.length < 1 || workerStatus === 'RUNNING'}\n      >\n        Match\n      </button>{' '}\n      <label>\n        <input\n          type=\"checkbox\"\n          onChange={() => setShowGroups((prevState) => !prevState)}\n          checked={showGroups}\n        />{' '}\n        Show Groups\n      </label>\n      {error && <p className=\"error\">{error.message}</p>}\n      <Pairs pairs={error ? [] : pairs} showGroups={showGroups} />\n    </>\n  );\n}\n","import { Exclusion } from 'gift-exchange';\n\nexport const exclusionKey = (exclusion: Exclusion) =>\n  exclusion.type +\n  exclusion.subject +\n  exclusion.excludedType +\n  exclusion.excludedSubject;\n","import { EnhancedExclusion } from '../Main';\nimport { RemoveButton } from '../common/RemoveButton';\n\ninterface Props {\n  exclusions: EnhancedExclusion[];\n  removeExclusion: (exclusionKey: EnhancedExclusion['key']) => void;\n}\n\ninterface ExclusionItemProps {\n  exclusion: EnhancedExclusion;\n  removeHandler: () => void;\n}\n\nconst ExclusionItem = ({ exclusion, removeHandler }: ExclusionItemProps) => (\n  <li>\n    <strong>{exclusion.subject}</strong> cannot give to{' '}\n    {exclusion.excludedType === 'group' && 'group '}\n    <strong>{exclusion.excludedSubject}</strong>{' '}\n    <RemoveButton onClick={removeHandler} />\n  </li>\n);\n\nexport function Exclusions({ exclusions, removeExclusion }: Props) {\n  if (!exclusions.length) {\n    return null;\n  }\n\n  const names = exclusions.filter((e) => e.type === 'name');\n  const groups = exclusions.filter((e) => e.type === 'group');\n\n  return (\n    <>\n      <h3 id=\"added-exclusions-heading\">Added Exclusions</h3>\n      <ul aria-labelledby=\"added-exclusions-heading\">\n        {names.length > 0 && (\n          <li>\n            <span id=\"added-exclusions-person\">Person</span>\n            <ul aria-labelledby=\"added-exclusions-person\">\n              {names.map((e) => (\n                <ExclusionItem\n                  key={e.key}\n                  exclusion={e}\n                  removeHandler={() => removeExclusion(e.key)}\n                />\n              ))}\n            </ul>\n          </li>\n        )}\n\n        {groups.length > 0 && (\n          <li>\n            <span id=\"added-exclusions-group\">Group</span>\n            <ul aria-labelledby=\"added-exclusions-group\">\n              {groups.map((e) => (\n                <ExclusionItem\n                  key={e.key}\n                  exclusion={e}\n                  removeHandler={() => removeExclusion(e.key)}\n                />\n              ))}\n            </ul>\n          </li>\n        )}\n      </ul>\n    </>\n  );\n}\n","import { SubmitHandler, useForm } from 'react-hook-form';\nimport '../common/form.css';\nimport { Exclusion } from 'gift-exchange';\nimport { exclusionKey } from '../common/utils';\nimport { ErrorMessage } from '@hookform/error-message';\nimport { ValidationError } from '../common/ValidationError';\n\ntype FormValues = Exclusion;\n\ninterface Props {\n  usedNames: string[];\n  usedGroups: string[];\n  usedExclusionKeys: string[];\n  onSubmit: (exclusion: Exclusion) => void;\n}\n\nexport const ExclusionForm = ({\n  usedNames,\n  usedGroups,\n  usedExclusionKeys,\n  onSubmit,\n}: Props) => {\n  const { errors, handleSubmit, register, reset, setError, watch } = useForm();\n  const submitHandler: SubmitHandler<FormValues> = (data) => {\n    if (usedExclusionKeys.includes(exclusionKey(data))) {\n      setError('excludedSubject', { message: 'This exclusion already exists' });\n      return;\n    }\n    onSubmit(data);\n    reset();\n  };\n\n  const type = watch('type', 'name');\n  const excludedType = watch('excludedType', 'name');\n\n  return (\n    <form\n      onSubmit={handleSubmit(submitHandler)}\n      style={{ display: 'flex', flexWrap: 'wrap' }}\n    >\n      <p style={{ flex: '1 0 100%' }}>\n        A Source will not be matched with the Excluded.\n      </p>\n      <fieldset style={{ flex: '1 0 auto' }}>\n        <legend>Source</legend>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"name\"\n            defaultChecked\n            ref={register({\n              required: 'A type is required',\n            })}\n          />{' '}\n          Name\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"type\"\n            value=\"group\"\n            ref={register({\n              required: 'A type is required',\n            })}\n          />{' '}\n          Group\n        </label>\n        <ErrorMessage errors={errors} name=\"type\" as={ValidationError} />\n\n        <label htmlFor=\"subject\">Subject</label>\n        <select\n          id=\"subject\"\n          name=\"subject\"\n          disabled={(type === 'name' ? usedNames : usedGroups).length < 1}\n          ref={register({\n            required: `A ${type} is required`,\n            validate: (value) =>\n              type === 'name'\n                ? usedNames.includes(value)\n                : usedGroups.includes(value),\n          })}\n        >\n          {(type === 'name' ? usedNames : usedGroups).map((item) => (\n            <option key={item}>{item}</option>\n          ))}\n        </select>\n        <ErrorMessage errors={errors} name=\"subject\" as={ValidationError} />\n      </fieldset>\n      <fieldset style={{ flex: '1 0 auto' }}>\n        <legend>Excluded</legend>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"excludedType\"\n            value=\"name\"\n            defaultChecked\n            ref={register({\n              required: 'A type is required',\n            })}\n          />{' '}\n          Name\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            name=\"excludedType\"\n            value=\"group\"\n            ref={register({\n              required: 'A type is required',\n            })}\n          />{' '}\n          Group\n        </label>\n        <ErrorMessage\n          errors={errors}\n          name=\"excludedType\"\n          as={ValidationError}\n        />\n\n        <label htmlFor=\"excludedSubject\">Subject</label>\n        <select\n          id=\"excludedSubject\"\n          name=\"excludedSubject\"\n          disabled={\n            (excludedType === 'name' ? usedNames : usedGroups).length < 1\n          }\n          ref={register({\n            required: `A ${excludedType} is required`,\n            validate: (value) =>\n              excludedType === 'name'\n                ? usedNames.includes(value)\n                : usedGroups.includes(value),\n          })}\n        >\n          {(excludedType === 'name' ? usedNames : usedGroups).map((item) => (\n            <option key={item}>{item}</option>\n          ))}\n        </select>\n        <ErrorMessage\n          errors={errors}\n          name=\"excludedSubject\"\n          as={ValidationError}\n        />\n      </fieldset>\n      <div style={{ flex: '0 0 100%' }}>\n        <button type=\"submit\">Add Exclusion</button>\n      </div>\n    </form>\n  );\n};\n","import { ReactNode } from 'react';\n\ninterface Props {\n  children?: ReactNode;\n  heading: string;\n}\n\nexport function Section({ children, heading }: Props) {\n  return (\n    <section>\n      <h2>{heading}</h2>\n      {children}\n    </section>\n  );\n}\n","import { Exclusion, Person } from 'gift-exchange';\nimport { exclusionKey } from './common/utils';\nimport { EnhancedExclusion } from './Main';\n\nconst date = new Date();\n\nconst names = Array.from(Array(12).keys()).map((num) => {\n  date.setMonth(num);\n  return date.toLocaleDateString(undefined, { month: 'long' });\n});\n\ninterface Props {\n  setPeople: (people: Person[]) => void;\n  setExclusions: (exclusions: EnhancedExclusion[]) => void;\n  disabled?: boolean;\n}\n\nexport function Seed({ setPeople, setExclusions, disabled }: Props) {\n  const handleClick = () => {\n    setPeople(\n      names.map((name, index) => ({\n        name,\n        group: (Math.floor(index % 3) + 1).toString(),\n      }))\n    );\n\n    const es: Exclusion[] = [\n      {\n        type: 'group',\n        subject: '1',\n        excludedType: 'name',\n        excludedSubject: names[1],\n      },\n      {\n        type: 'name',\n        subject: names[5],\n        excludedType: 'group',\n        excludedSubject: '2',\n      },\n    ];\n    setExclusions(es.map((e) => ({ ...e, key: exclusionKey(e) })));\n  };\n\n  return (\n    <button onClick={handleClick} type=\"button\" disabled={disabled}>\n      Fill with Example Data\n    </button>\n  );\n}\n","import { Dispatch, SetStateAction, useEffect, useState } from 'react';\n\nexport const useStoredState = <\n  S extends string | number | boolean | null | {} | []\n>(\n  key: string,\n  defaultValue: S\n): [S, Dispatch<SetStateAction<S>>] => {\n  const [value, setValue] = useState<S>(() => {\n    const value = localStorage.getItem(key);\n    return value !== null ? JSON.parse(value) : defaultValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [value, key]);\n\n  return [value, setValue];\n};\n","import { useMemo } from 'react';\nimport { PersonForm } from './people/PersonForm';\nimport { People } from './people/People';\nimport { Exclusion, Person } from 'gift-exchange';\nimport { Matches } from './matches/Matches';\nimport { exclusionKey } from './common/utils';\nimport { Exclusions } from './exclusions/Exclusions';\nimport { ExclusionForm } from './exclusions/ExclusionForm';\nimport { Section } from './common/Section';\nimport { Tab, TabList, TabPanels, Tabs, TabPanel } from '@reach/tabs';\nimport './common/tabs.css';\nimport { Seed } from './Seed';\nimport { useStoredState } from './common/useStoredState';\n\nexport interface EnhancedExclusion extends Exclusion {\n  key: string;\n}\n\nconst isString = (str: unknown): str is string => typeof str === 'string';\n\nexport function Main() {\n  const [people, setPeople] = useStoredState<Person[]>(\n    'secret-santa-people',\n    []\n  );\n  const [exclusions, setExclusions] = useStoredState<EnhancedExclusion[]>(\n    'secret-santa-exclusions',\n    []\n  );\n\n  const usedNames = useMemo(() => people.map((p) => p.name), [people]);\n  const usedGroups = useMemo(\n    () => [...new Set(people.map((p) => p.group).filter(isString))],\n    [people]\n  );\n  const usedExclusionKeys = useMemo(() => exclusions.map((e) => e.key), [\n    exclusions,\n  ]);\n\n  const addPerson = (person: Person) => {\n    setPeople((prev) => prev.concat(person));\n  };\n\n  const removePerson = (person: Person) => {\n    setPeople((prevPeople) => prevPeople.filter((p) => p.name !== person.name));\n  };\n\n  const addExclusion = (exclusion: Exclusion) => {\n    setExclusions((prevExclusions) =>\n      prevExclusions.concat({ ...exclusion, key: exclusionKey(exclusion) })\n    );\n  };\n\n  const removeExclusion = (exclusionKey: string) => {\n    setExclusions((prevExclusions) =>\n      prevExclusions.filter((p) => p.key !== exclusionKey)\n    );\n  };\n\n  const clear = () => {\n    setPeople([]);\n    setExclusions([]);\n  };\n\n  return (\n    <main>\n      <section>\n        <p>\n          Create a matching of names for your gift exchange or Secret Santa. It\n          supports grouping of people as well as directional exclusions based on\n          the group or individual name to support all of your custom rules.\n        </p>\n        <Seed\n          setPeople={setPeople}\n          setExclusions={setExclusions}\n          disabled={people.length + exclusions.length !== 0}\n        />{' '}\n        <button className=\"danger\" onClick={clear}>\n          Clear\n        </button>\n      </section>\n      <Tabs>\n        <TabList>\n          <Tab>People</Tab>\n          <Tab>Exclusions</Tab>\n          <Tab disabled={people.length < 1}>Matches</Tab>\n        </TabList>\n\n        <TabPanels>\n          <TabPanel>\n            <Section heading=\"People\">\n              <PersonForm\n                usedNames={usedNames}\n                usedGroups={usedGroups}\n                onSubmit={addPerson}\n              />\n              <People people={people} removePerson={removePerson} />\n            </Section>\n          </TabPanel>\n          <TabPanel>\n            <Section heading=\"Exclusions\">\n              <ExclusionForm\n                usedNames={usedNames}\n                usedGroups={usedGroups}\n                usedExclusionKeys={usedExclusionKeys}\n                onSubmit={addExclusion}\n              />\n              <Exclusions\n                exclusions={exclusions}\n                removeExclusion={removeExclusion}\n              />\n            </Section>\n          </TabPanel>\n          <TabPanel>\n            <Section heading=\"Matches\">\n              <Matches people={people} exclusions={exclusions} />\n            </Section>\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n    </main>\n  );\n}\n","import { useEffect } from 'react';\nimport { Main } from './Main';\n\nconst emoji = [\n  '🎅',\n  '🎅🏻',\n  '🎅🏼',\n  '🎅🏽',\n  '🎅🏾',\n  '🎅🏿',\n  '🤶',\n  '🤶🏻',\n  '🤶🏼',\n  '🤶🏽',\n  '🤶🏾',\n  '🤶🏿',\n];\nconst santa = emoji[Math.floor(Math.random() * emoji.length)];\n\nfunction App() {\n  useEffect(() => {\n    document.title = `Secret Santa ${santa}`;\n  }, []);\n\n  return (\n    <>\n      <header>\n        <h1>\n          Secret Santa{' '}\n          <span role=\"presentation\" aria-hidden=\"true\">\n            {santa}\n          </span>\n        </h1>\n        <p>\n          By{' '}\n          <a href=\"https://brianm.me\" rel=\"noopener noreferrer\">\n            Brian Mitchell\n          </a>\n          . View the source on{' '}\n          <a\n            href=\"https://github.com/BrianMitchL/secret-santa\"\n            rel=\"noopener noreferrer\"\n          >\n            GitHub\n          </a>\n          .\n        </p>\n      </header>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport '@exampledev/new.css';\nimport 'typeface-inter';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}